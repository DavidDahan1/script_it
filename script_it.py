import os
import sys
import subprocess
import argparse
from datetime import datetime


""" ADJUST THE BELOW VARIABLE BY RUNNING "echo $HISTFILE" on your terminal """
history_location = "~/.zsh_history"
"""FEEL FREE TO CONFIGURE ME!"""
HOME = os.getenv("HOME")
BASH_DEFAULT = ".zshrc"  # CONFIG with "echo $SHELL"
SCRIPTS_DIR = ".auto_scripts"
PATH = os.getenv("PATH").split(":")[0]

try:
    global commands_num
    commands_num = int(sys.argv[1])
except Exception as e:
    print(e)
    print("--------------------")
    print("First Argument must be the number of commands to retrive from history!")
    exit()

parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,
                               description="This script will help you do those quick n' dirrty automation that you know\n"
                                           "you should have a long time ago.\n"
                                           "HOW-TO:\n"
                                           "python3 autodave.py <number-of-previus-commands> [options]\n"
                                           "-E      Edit mode.\n"
                                           "        The script will be opened in an ide for you to edit.\n"
                                           "-ide    -ide=[vim(defualt), pycharm, vscode, sublime]\n"
                                           "        Choode one from the above ides or use Vim as default.\n"
                                           "-alias  -alias=The name of the script and the alias. fo Ex:\n"
                                           "                py autodave.py 5 -alias=get_logs will generate\n"
                                           "                get_logs.sh and alias is to 'get_logs'.")

parser.add_argument("-E", "--E",
                    action="store_true",
                    help="If -E flag is present, Edit mode will be on.\n "
                         "Default IDE will open with the commands retrived from history")
parser.add_argument("-ide", "--ide",
                    default="vim",
                    choices=["vim", "pycharm", "sublime", "vscode"],
                    help="If -E (edit mode) you can choose your favorite IDE, vim is default")
parser.add_argument("-alias", "--alias",
                    default=None,
                    help="Name your script with an informative alias.")

args = parser.parse_args(sys.argv[2:])

if args.ide == "vim":
    ide = "vim"
elif args.ide == "vscode":
    ide = "code"
elif args.ide == "pycharm":
    ide = "pycharm-community"
elif args.ide == "sublime":
    ide = "subl"



# history_location = None  # Edit me!
if history_location is None:
    print("Go to lines 38-39 at automate.py and edit your history locaiton!\n"
          "This has to be done manually :( \n"
          "But only for the first time!")
    exit()


def get_commands_from_history(num):
    raw_commands = subprocess.check_output(f"tail -{num+1} {history_location}", shell=True)
    parsed_commads = raw_commands.decode("utf-8").split("\n:")
    parsed_commads = [x.split(";")[-1].replace("\n","") for x in parsed_commads]
    for command in parsed_commads[:-1]:
        print(command)
    return parsed_commads[:-1]

#pprint(get_commands_from_history(10))


def write_script():
    # If this is your first time here,
    # or if SCRIPTS_DIR changed,
    # it'll set you up with a directory for all of your automations
    if SCRIPTS_DIR in os.listdir(PATH):
        pass
    else:
        print(f"making dir... {PATH}/{SCRIPTS_DIR}")
        os.mkdir(f"{PATH}/{SCRIPTS_DIR}")

    with open(f"{PATH}/{SCRIPTS_DIR}/{args.alias}.sh", "w") as script:
        script.write("#!/bin/bash\n\n")
        script.write(f"### THIS SCRIPT WAS GENERATED BY automate.py AT: {datetime.now()} ###\n\n")
        for command in get_commands_from_history(commands_num):
            script.write(command + "\n")
            print(f"writing: \"{command}\" --> {args.alias}.sh")

    #  alias the script
    with open(F"{HOME}/{BASH_DEFAULT}", "a") as bash_writer:
        bash_writer.write(f"\n## THIS ALIAS WAS AUTOMATICALLY ADDED BY automate.py AT {datetime.now()} ##\n")
        bash_writer.write(f"alias {args.alias}='{PATH}/{SCRIPTS_DIR}/{args.alias}.sh'")
    print(f"Added {args.alias} to $PATH ({PATH})")
    #  chmod the script
    subprocess.run(f"chmod +x {PATH}/{SCRIPTS_DIR}/{args.alias}.sh", shell=True)
    print(f"chmod +x {PATH}/{SCRIPTS_DIR}/{args.alias}.sh")
    #  source file (reading the file is the best way instead of subprocess 'source {file}')
    with open(f"{HOME}/{BASH_DEFAULT}") as f:
        print(f"Opened {HOME}/{BASH_DEFAULT}")
        pass
    print(f"Sourced {BASH_DEFAULT}")
    #  edit the script if needed
    if args.E:
        subprocess.run(f"{ide} {PATH}/{SCRIPTS_DIR}/{args.alias}.sh", shell=True)


def main():
    write_script()

main()




